{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","Countdown/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","Screen","styled","div","image","SpacerSmall","SpacerMedium","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","CountDown","props","count","bind","days","minutes","hours","secounds","time_up","x","deadline","now","Date","getTime","t","this","dd","Math","floor","hh","mm","ss","seconds","setState","clearInterval","setInterval","id","className","Component","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledLink","a","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount1","setMintAmount1","mintAmount2","setMintAmount2","mintAmount3","setMintAmount3","mintAmount4","setMintAmount4","totalCostamount1","setTotalAmount1","totalCostamount2","setTotalAmount2","totalCostamount3","setTotalAmount3","totalCostamount4","setTotalAmount4","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY1","WEI_COST1","DISPLAY_COST1","MAX_SUPPLY2","WEI_COST2","DISPLAY_COST2","MAX_SUPPLY3","WEI_COST3","DISPLAY_COST3","MAX_SUPPLY4","WEI_COST4","DISPLAY_COST4","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","SET_CONFIG","getData","getPrice","err","res","getConfig","config","useEffect","style","display","alt","src","border","borderRadius","width","position","top","padding","maxWidth","marginTop","marginBottom","textAlign","fontFamily","fontSize","color","totalPlatinumSupply","Number","target","href","verticalAlign","onClick","e","preventDefault","disabled","newMintAmount1","String","decrementMintAmount1","incrementMintAmount1","gasLimit","totalCostWei","totalGasLimit","PlatinumMint","send","to","from","value","once","then","receipt","claimNFTs1","newMintAmount2","decrementMintAmount2","incrementMintAmount2","GoldMint","claimNFTs2","newMintAmount3","decrementMintAmount3","incrementMintAmount3","SilverMint","claimNFTs3","newMintAmount4","decrementMintAmount4","incrementMintAmount4","BronzeMint","claimNFTs4","backgroundColor","float","marginRight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uxBAAMA,EAAe,CACnBC,SAAS,EACTC,QAAS,KACTC,cAAe,KACfC,KAAM,KACNC,SAAU,IAkCGC,EA/BW,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFT,GADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,2BACFM,GADL,IAEEN,SAAS,EACTC,QAASM,EAAOE,QAAQR,QACxBC,cAAeK,EAAOE,QAAQP,cAC9BC,KAAMI,EAAOE,QAAQN,OAEzB,IAAK,oBACH,OAAO,2BACFJ,GADL,IAEEC,SAAS,EACTI,SAAUG,EAAOE,UAErB,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEL,QAASM,EAAOE,QAAQR,UAE5B,QACE,OAAOK,EAEZ,ECrCKP,EAAe,CACnBC,SAAS,EACTU,YAAa,EACbC,KAAM,EACNC,OAAO,EACPR,SAAU,IAiCGS,EA9BK,WAAmC,IAAlCP,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEN,SAAS,EACTY,OAAO,EACPR,SAAU,KAEd,IAAK,qBACH,OAAO,2BACFE,GADL,IAEEN,SAAS,EACTU,YAAaH,EAAOE,QAAQC,YAE5BE,OAAO,EACPR,SAAU,KAEd,IAAK,oBACH,OAAO,2BACFL,GADL,IAEEC,SAAS,EACTY,OAAO,EACPR,SAAUG,EAAOE,UAErB,QACE,OAAOH,EAEZ,EC/BKQ,EAAcC,YAAgB,CAClCC,WAAYX,EACZY,KAAMJ,IAGFK,EAAa,CAACC,KACdC,EAAmBC,YAAQC,IAAe,WAAf,EAAmBJ,IAQrCK,EALNC,YAAYV,EAAaM,GCE5BK,EAAkB,SAAChB,GACvB,MAAO,CACLD,KAAM,oBACNC,QAASA,EAEZ,EAEYiB,EAAY,WACvB,wDAAO,WAAOC,GAAP,wFACLA,EArBK,CACLnB,KAAM,uBAmBD,kBAGqBe,EACrBK,WACAZ,WAAWd,cAAc2B,QAAQnB,cACjCoB,OANA,OAGCpB,EAHD,OAYHiB,EA1BG,CACLnB,KAAM,qBACNC,QAyBqB,CACfC,iBAdD,gDAmBHqB,QAAQC,IAAR,MACAL,EAASF,EAAgB,uCApBtB,yDAAP,qDAuBD,EC5BKQ,EAAgB,SAACxB,GACrB,MAAO,CACLD,KAAM,oBACNC,QAASA,EAEZ,EASYyB,EAAU,WACrB,wDAAO,WAAOP,GAAP,wGACLA,EA5BK,CACLnB,KAAM,uBA0BD,SAEqB2B,MAAM,mBAAoB,CAClDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBALP,cAECC,EAFD,gBAQaA,EAAYC,OARzB,cAQCC,EARD,gBASwBL,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAZP,cASCI,EATD,iBAegBA,EAAeF,OAf/B,WAeCG,EAfD,SAgBgBC,OAAbC,EAhBH,EAgBGA,WACoBA,GAAYA,EAASC,YAjB5C,wBAmBHC,IAAgBC,YAAYH,GACxBzC,EAAO,IAAI6C,IAAKJ,GApBjB,oBAsBsBA,EAASK,QAAQ,CACtCC,OAAQ,wBAvBT,eAsBKC,EAtBL,iBAyBuBP,EAASK,QAAQ,CACvCC,OAAQ,gBA1BT,gBA4BgBR,EAAOU,QAAQC,IACxBC,EAAmB,IAAIR,IAC3BN,EACAE,EAAOa,kBAET5B,EAtDD,CACLnB,KAAM,qBACNC,QAqDuB,CACbR,QAASkD,EAAS,GAClBjD,cAAeoD,EACfnD,KAAMA,KAIVyC,EAASY,GAAG,mBAAmB,SAACL,GAC9BxB,EAAS8B,EAAcN,EAAS,IACjC,IACDP,EAASY,GAAG,gBAAgB,WAC1Bb,OAAOe,SAASC,QACjB,KAGDhC,EAASM,EAAc,qBAAD,OAAsBS,EAAOU,QAAQQ,KAArC,OAjDvB,mDAoDDjC,EAASM,EAAc,0BApDtB,gCAuDHN,EAASM,EAAc,sBAvDpB,2DAAP,qDA0DD,EAEYwB,EAAgB,SAACxD,GAC5B,wDAAO,WAAO0B,GAAP,2EACLA,EArEK,CACLnB,KAAM,iBACNC,QAmE8B,CAAER,QAASA,KACzC0B,EAASD,KAFJ,2CAAP,qDAID,E,wBChGYmC,EAASC,IAAOC,IAAV,yOAEG,gBAAGC,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,MAA1C,IAgBTC,GANeH,IAAOC,IAAV,2DAMED,IAAOC,IAAV,8DAMXG,EAAeJ,IAAOC,IAAV,6DAYZI,GANcL,IAAOC,IAAV,6DAMCD,IAAOC,IAAV,iQAEZ,gBAAGK,EAAH,EAAGA,KAAH,OAAeA,GAAc,CAA7B,IACU,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,QAAvB,IACC,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,YAAvB,IACJ,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,YAAvB,IACK,qBAAGC,KAAmB,OAAS,MAA/B,IAEA,gBAAGR,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,MAA1C,KAKTS,EAAYX,IAAOY,EAAV,yHAaTC,GANeb,IAAOY,EAAV,oGAMMZ,IAAOY,EAAV,qG,IAMGZ,IAAOC,IAAV,iE,6DCLba,G,oDA7Db,WAAYC,GAAQ,IAAD,+BACjB,cAAMA,IACDC,MAAQ,EAAKA,MAAMC,KAAX,iBACb,EAAKzE,MAAQ,CACX0E,KAAM,EACNC,QAAS,EACTC,MAAO,EACPC,SAAU,EACVC,QAAS,IAEX,EAAKC,EAAI,KACT,EAAKC,SAAW,KAXC,CAYlB,C,0CACD,WACE,IAAIC,GAAM,IAAIC,MAAOC,UACjBC,EAAIC,KAAKL,SAAWC,EACpBK,EAAKC,KAAKC,MAAMJ,EAAC,OACjBK,EAAKF,KAAKC,MAAOJ,EAAC,MAAF,MAChBM,EAAKH,KAAKC,MAAOJ,EAAC,KAAF,KAChBO,EAAKJ,KAAKC,MAAOJ,EAAC,IAAkB,KAEpCV,EAAOY,EAAK,GAAK,IAAMA,EAAKA,EAC5BV,EAAQa,EAAK,GAAK,IAAMA,EAAKA,EAC7Bd,EAAUe,EAAK,GAAK,IAAMA,EAAKA,EAC/BE,EAAUD,EAAK,GAAK,IAAMA,EAAKA,EAEnCN,KAAKQ,SAAS,CAAEnB,OAAMC,UAASC,QAAOgB,YAElCR,EAAI,IACNU,cAAcT,KAAKN,GACnBM,KAAKQ,SAAS,CACZnB,KAAM,EACNC,QAAS,EACTC,MAAO,EACPgB,QAAS,EACTd,QAAS,eAGd,G,+BACD,WACEO,KAAKL,SAAW,IAAIE,KAAK,yBAAyBC,UAElDE,KAAKN,EAAIgB,YAAYV,KAAKb,MAAO,IAClC,G,oBAED,WACE,MAA0Ca,KAAKrF,MAA/C,EAAQ0E,KAAR,EAAckB,QAAd,EAAuBhB,MAAvB,EAA8BD,QAC9B,OACE,uBAAKqB,GAAG,YAAR,UACE,sBAAKC,UAAU,cAAf,uBAGA,sBAAKA,UAAU,mBAMpB,K,GA3DqBC,aCaXC,I,OAAe3C,IAAO4C,OAAV,4gBAoBZC,GAAoB7C,IAAO4C,OAAV,inBAyBjBE,GAAoB9C,IAAOC,IAAV,6NAqBjB8C,IATa/C,IAAOgD,IAAV,2JASEhD,IAAOgD,IAAV,gVAeTC,GAAajD,IAAOkD,EAAV,kFAi4CRC,OA53Cf,WACE,IAAMtF,EAAWuF,cACXlG,EAAamG,aAAY,SAAC7G,GAAD,OAAWA,EAAMU,UAAjB,IACzBC,EAAOkG,aAAY,SAAC7G,GAAD,OAAWA,EAAMW,IAAjB,IACzB,EAAsCmG,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCN,mBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAsCR,mBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAsCV,mBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAA4CZ,mBAAS,KAArD,mBAAOa,EAAP,KAAyBC,EAAzB,KACA,EAA4Cd,mBAAS,KAArD,mBAAOe,EAAP,KAAyBC,EAAzB,KACA,EAA4ChB,mBAAS,KAArD,mBAAOiB,EAAP,KAAyBC,EAAzB,KACA,EAA4ClB,mBAAS,MAArD,oBAAOmB,GAAP,MAAyBC,GAAzB,MACA,GAA6BpB,mBAAS,CACpC7D,iBAAkB,6CAClBkF,UACE,kFACFrF,QAAS,CACPQ,KAAM,GACN8E,OAAQ,GACRrF,GAAI,GAENsF,SAAU,GACVD,OAAQ,GACRE,YAAa,EACbC,UAAW,EACXC,cAAe,EACfC,YAAa,EACbC,UAAW,EACXC,cAAe,EACfC,YAAa,EACbC,UAAW,EACXC,cAAe,EACfC,YAAa,EACbC,UAAW,EACXC,cAAe,EACfC,UAAW,EACXC,YAAa,GACbC,iBAAkB,GAClBC,iBAAiB,IA1BnB,qBAAOjH,GAAP,MAAekH,GAAf,MAqQMC,GAAU,WACa,KAAvB7I,EAAWf,SAA+C,OAA7Be,EAAWd,gBAC1CyB,EAASD,EAAUV,EAAWf,UAC9Be,EAAWd,cAAc2B,QACtBiI,SAAS,EAAG9I,EAAWf,SACvB6B,MAAK,SAACiI,EAAKC,GACV9B,EAAgB8B,EAAM,KACvB,IACHhJ,EAAWd,cAAc2B,QACtBiI,SAAS,EAAG9I,EAAWf,SACvB6B,MAAK,SAACiI,EAAKC,GACV5B,EAAgB4B,EAAM,KACvB,IACHhJ,EAAWd,cAAc2B,QACtBiI,SAAS,EAAG9I,EAAWf,SACvB6B,MAAK,SAACiI,EAAKC,GACV1B,EAAgB0B,EAAM,KACvB,IACHhJ,EAAWd,cAAc2B,QACtBiI,SAAS,EAAG9I,EAAWf,SACvB6B,MAAK,SAACiI,EAAKC,GACVxB,GAAgBwB,EAAM,KACvB,IAEHJ,GAAW,2BACNlH,IADK,IAERmG,UAA8B,KAAnBZ,EACXe,UAA8B,KAAnBb,EACXgB,UAA8B,KAAnBd,EACXiB,UAA8B,KAAnBf,GACXO,cAAeb,EACfgB,cAAed,EACfiB,cAAef,EACfkB,cAAehB,MAGpB,EAEK0B,GAAS,iDAAG,gHACa9H,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAJI,cACVI,EADU,gBAOKA,EAAeF,OAPpB,OAOV2H,EAPU,OAQhBN,GAAWM,GARK,2CAAH,qDAmBf,OARAC,qBAAU,WACRF,IACD,GAAE,IAEHE,qBAAU,WACRN,IACD,GAAE,CAAC7I,EAAWf,UAGb,gBAAC,EAAD,WACE,eAAC,EAAD,CAAaqE,GAAI,SAAUC,GAAI,SAAUgC,UAAU,aAAnD,SACE,eAAC,EAAD,CACEjC,GAAI,SACJC,GAAI,SACJ6F,MAAO,CAAEC,QAAS,gBAHpB,SAKE,sBACEC,IAAI,OACJC,IAAK,0BACLhE,UAAU,mBAehB,eAAC,EAAD,CAAajC,GAAI,SAAUC,GAAI,SAA/B,SACE,eAACsC,GAAD,CACEyD,IAAK,UACLC,IAAK,+BACLH,MAAO,CAAEI,OAAQ,OAAQC,aAAc,EAAGC,MAAO,YAGrD,eAAC,EAAD,CACEpG,GAAI,SACJC,GAAI,SACJ+B,GAAG,QACH8D,MAAO,CAAEO,SAAU,WAAYC,IAAK,KAJtC,SAME,gBAAChE,GAAD,CACExC,KAAM,EACNgG,MAAO,CACLS,QAAS,GACTC,SAAU,KACVC,UAAW,GACXC,aAAc,IAEhBxG,MAAI,EARN,UAUE,gBAAC,EAAD,CAAaJ,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,UACE,eAAC,EAAD,CACEgC,UAAU,oBACV6D,MAAO,CACLa,UAAW,OACXC,WAAY,eACZC,SAAU,GACVC,MAAO,sBACPJ,aAAc,IAPlB,8DAYA,eAAC,EAAD,CAAmBzE,UAAU,iBAA7B,ujBAYF,eAAC,EAAD,CACEnC,KAAM,EACNE,GAAI,SACJC,GAAI,SACJ6F,MAAO,CAAEC,QAAS,kBAKxB,eAAC,EAAD,CAAa/F,GAAI,SAAUC,GAAI,SAA/B,SACE,eAACqC,GAAD,CACExC,KAAM,EACNgG,MAAO,CAAES,QAAS,GAAIC,SAAU,KAAMT,QAAS,QAC/C7F,MAAI,EAHN,SAKE,eAAC,GAAD,QAIJ,eAAC,EAAD,CAAaF,GAAI,SAAUC,GAAI,SAAU+B,GAAG,cAA5C,SACE,gBAACM,GAAD,CACExC,KAAM,EACNgG,MAAO,CACLS,QAAS,GACTC,SAAU,KACVC,UAAW,GACXC,aAAc,GACdE,WAAY,gBAEd1G,MAAI,EATN,UAWE,eAAC,EAAD,CAAaJ,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,SACE,gBAAC,EAAD,CAAaH,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,UACE,eAACsC,GAAD,CACEyD,IAAK,WACLC,IAAK,8BACLhE,UAAU,mBAEZ,eAAC,EAAD,CAAmB6D,MAAO,CAAEa,UAAW,SAAUE,SAAU,IAA3D,6BAGA,eAAC,EAAD,CAAmBf,MAAO,CAAEa,UAAW,SAAUE,SAAU,IAA3D,SACGlK,EAAKoK,sBAER,eAAC,EAAD,IACCC,OAAOrK,EAAKoK,sBAAwB3I,GAAOkG,YAC1C,uCACE,eAAC,EAAD,CAAawB,MAAO,CAAEa,UAAW,UAAjC,iCAGA,gBAAC,EAAD,CAAmBb,MAAO,CAAEa,UAAW,UAAvC,gCACsBvI,GAAOiG,SAD7B,SAGA,eAAC,EAAD,IACA,eAAC5B,GAAD,CAAYwE,OAAQ,SAAUC,KAAM9I,GAAOgH,iBAA3C,SACGhH,GAAO+G,iBAIZ,uCACE,gBAAC,EAAD,CACErF,KAAM,EACNE,GAAI,SACJC,GAAI,SACJ6F,MAAO,CAAEa,UAAW,SAAUZ,QAAS,QAASjG,KAAM,GAJxD,UAME,gBAAC,EAAD,CACEgG,MAAO,CACLa,UAAW,SACXE,SAAU,GACVd,QAAS,eACToB,cAAe,SALnB,UAUE,eAAC5E,GAAD,CACEyD,IAAK,UACLC,IAAK,kCACLhE,UAAU,iBAEX7D,GAAOoG,cAAe,IACvB,uBAAMsB,MAAO,CAAEe,SAAU,IAAzB,oBAGF,eAAC,EAAD,CACEf,MAAO,CAAEa,UAAW,SAAUZ,QAAS,QADzC,oCAOsB,KAAvBrJ,EAAWf,SACiB,OAA7Be,EAAWd,cACT,gBAAC,EAAD,CACEqE,GAAI,SACJD,GAAI,SACJ8F,MAAO,CAAEC,QAAS,QAASY,UAAW,UAHxC,UAKE,gBAAC,EAAD,CACEb,MAAO,CACLa,UAAW,UAFf,4BAKkBvI,GAAOU,QAAQQ,KALjC,cAOA,eAAC,EAAD,IAWA,eAAC6C,GAAD,CACEF,UAAU,uBACVmF,QAAS,SAACC,GACRA,EAAEC,iBACFjK,EAASO,KACT2H,IACD,EANH,qBAgDyB,KAAxB7I,EAAWZ,SACV,uCACE,eAAC,EAAD,IACA,eAAC,EAAD,CACEgK,MAAO,CACLa,UAAW,UAFf,SAKGjK,EAAWZ,cAGd,QAGN,uCACE,eAAC,EAAD,CACEgK,MAAO,CACLa,UAAW,UAFf,SAKG1D,IAEH,eAAC,EAAD,IACA,gBAAC,EAAD,CAAahD,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,UACE,eAACsC,GAAD,CACEJ,UAAU,gBACVsF,SAAUxE,EAAc,EAAI,EAC5BqE,QAAS,SAACC,GACRA,EAAEC,iBA3gBC,WAC3B,IAAIE,EAAiBrE,EAAc,EAC/BqE,EAAiB,IACnBA,EAAiB,GAEnBpE,EAAeoE,GACf,IAAInL,EAAO+B,GAAOmG,UACdZ,EAAmB8D,OACpBpL,EAAOmL,EAAkB,MAE5B5D,EAAgBD,EACjB,CAigByB+D,EACD,EANH,eAUA,eAAC,EAAD,IACA,eAAC,EAAD,IACA,eAAC,EAAD,CACE5B,MAAO,CAAEa,UAAW,SAAUE,SAAU,IAD1C,SAGG1D,IAEH,eAAC,EAAD,IACA,eAAC,EAAD,IACA,eAACd,GAAD,CACEJ,UAAU,gBACVsF,SAAUxE,EAAc,EAAI,EAC5BqE,QAAS,SAACC,GACRA,EAAEC,iBAlhBC,WAC3B,IAAIE,EAAiBrE,EAAc,EAC/BqE,EAAiB,IACnBA,EAAiB,GAEnBpE,EAAeoE,GACf,IAAInL,EAAO+B,GAAOmG,UACdZ,EAAmB8D,OACpBpL,EAAOmL,EAAkB,MAE5B5D,EAAgBD,EACjB,CAwgByBgE,EACD,EANH,kBAWF,eAAC,EAAD,IAEA,eAAC,EAAD,CACE1H,GAAI,SACJD,GAAI,SACJD,GAAI,MACJ+F,MAAO,CAAEW,UAAW,IAJtB,SAME,eAACtE,GAAD,CACEoF,SAAUxE,EAAc,EAAI,EAC5Bd,UAAU,UACVmF,QAAS,SAACC,GACRA,EAAEC,iBAjlBT,WACjB,IAAIjL,EAAO+B,GAAOmG,UACdqD,EAAWxJ,GAAO8G,UAClB2C,EAAeJ,OAAOpL,EAAO8G,GAC7B2E,EAAgBL,OAAOG,EAAWzE,GACtC1F,QAAQC,IAAI,SAAUmK,GACtBpK,QAAQC,IAAI,cAAeoK,GAC3B5E,EAAY,gBAAD,OAAiB9E,GAAOiG,SAAxB,QACXrB,GAAe,GACftG,EAAWd,cAAc2B,QACtBwK,aAAarL,EAAWf,QAASwH,GACjC6E,KAAK,CACJJ,SAAUH,OAAOK,GACjBG,GAAI7J,GAAOa,iBACXiJ,KAAMxL,EAAWf,QACjBwM,MAAON,IAERO,KAAK,SAAS,SAAC3C,GACdhI,QAAQC,IAAI+H,GACZvC,EAAY,uDACZF,GAAe,EAChB,IACAqF,MAAK,SAACC,GACL7K,QAAQC,IAAI4K,GACZpF,EAAY,YAAD,OACG9E,GAAOiG,SADV,+CAGXrB,GAAe,GACf3F,EAASD,EAAUV,EAAWf,SAC/B,GACJ,CAojByB4M,GACAhD,IACD,EAPH,SASGxC,EACG,OACA,YAAcY,EAAmB,iBAOjD,eAAC,EAAD,SAGJ,eAAC,EAAD,CAAa7D,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,SACE,gBAAC,EAAD,CAAaH,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,UACE,eAACsC,GAAD,CACEyD,IAAK,WACLC,IAAK,0BACLhE,UAAU,mBAEZ,eAAC,EAAD,CAAmB6D,MAAO,CAAEa,UAAW,SAAUE,SAAU,IAA3D,4BAGA,eAAC,EAAD,IACCG,OAAOrK,EAAKP,cAAgBgC,GAAOqG,YAClC,uCACE,eAAC,EAAD,CAAaqB,MAAO,CAAEa,UAAW,UAAjC,iCAGA,gBAAC,EAAD,CAAmBb,MAAO,CAAEa,UAAW,UAAvC,gCACsBvI,GAAOiG,SAD7B,SAGA,eAAC,EAAD,IACA,eAAC5B,GAAD,CAAYwE,OAAQ,SAAUC,KAAM9I,GAAOgH,iBAA3C,SACGhH,GAAO+G,iBAIZ,uCACE,gBAAC,EAAD,CACErF,KAAM,EACNE,GAAI,SACJC,GAAI,SACJ6F,MAAO,CAAEa,UAAW,SAAUZ,QAAS,QAASjG,KAAM,GAJxD,UAME,gBAAC,EAAD,CACEgG,MAAO,CACLa,UAAW,SACXE,SAAU,GACVd,QAAS,eACToB,cAAe,SALnB,UAUE,eAAC5E,GAAD,CACEyD,IAAK,UACLC,IAAK,kCACLhE,UAAU,iBAEX7D,GAAOuG,cAAe,IACvB,uBAAMmB,MAAO,CAAEe,SAAU,IAAzB,oBAGF,eAAC,EAAD,CACEf,MAAO,CAAEa,UAAW,SAAUZ,QAAS,QADzC,oCAOsB,KAAvBrJ,EAAWf,SACiB,OAA7Be,EAAWd,cACT,gBAAC,EAAD,CACEqE,GAAI,SACJD,GAAI,SACJ8F,MAAO,CAAEC,QAAS,QAASY,UAAW,UAHxC,UAKE,gBAAC,EAAD,CACEb,MAAO,CACLa,UAAW,UAFf,4BAKkBvI,GAAOU,QAAQQ,KALjC,cAOA,eAAC,EAAD,IAWA,eAAC6C,GAAD,CACEF,UAAU,uBACVmF,QAAS,SAACC,GACRA,EAAEC,iBACFjK,EAASO,KACT2H,IACD,EANH,qBAgDyB,KAAxB7I,EAAWZ,SACV,uCACE,eAAC,EAAD,IACA,eAAC,EAAD,CACEgK,MAAO,CACLa,UAAW,UAFf,SAKGjK,EAAWZ,cAGd,QAGN,uCACE,eAAC,EAAD,CACEgK,MAAO,CACLa,UAAW,UAFf,SAKG1D,IAEH,eAAC,EAAD,IACA,gBAAC,EAAD,CAAahD,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,UACE,eAACsC,GAAD,CACEJ,UAAU,gBACVsF,SAAUxE,EAAc,EAAI,EAC5BqE,QAAS,SAACC,GACRA,EAAEC,iBAvqBC,WAC3B,IAAIkB,EAAiBnF,EAAc,EAC/BmF,EAAiB,IACnBA,EAAiB,GAEnBlF,EAAekF,GACf,IAAInM,EAAO+B,GAAOsG,UACdb,EAAmB4D,OACpBpL,EAAOmM,EAAkB,MAE5B1E,EAAgBD,EACjB,CA6pByB4E,EACD,EANH,eAUA,eAAC,EAAD,IACA,eAAC,EAAD,IACA,eAAC,EAAD,CACE3C,MAAO,CAAEa,UAAW,SAAUE,SAAU,IAD1C,SAGGxD,IAEH,eAAC,EAAD,IACA,eAAC,EAAD,IACA,eAAChB,GAAD,CACEJ,UAAU,gBACVsF,SAAUxE,EAAc,EAAI,EAC5BqE,QAAS,SAACC,GACRA,EAAEC,iBA9qBC,WAC3B,IAAIkB,EAAiBnF,EAAc,EAC/BmF,EAAiB,IACnBA,EAAiB,GAEnBlF,EAAekF,GACf,IAAInM,EAAO+B,GAAOsG,UACdb,EAAmB4D,OACpBpL,EAAOmM,EAAkB,MAE5B1E,EAAgBD,EACjB,CAoqByB6E,EACD,EANH,kBAWF,eAAC,EAAD,IAEA,eAAC,EAAD,CACEzI,GAAI,SACJD,GAAI,SACJD,GAAI,MACJ+F,MAAO,CAAEW,UAAW,IAJtB,SAME,eAACtE,GAAD,CACEoF,SAAUxE,EAAc,EAAI,EAC5Bd,UAAU,UACVmF,QAAS,SAACC,GACRA,EAAEC,iBA7uBT,WACjB,IAAIjL,EAAO+B,GAAOsG,UACdkD,EAAWxJ,GAAO8G,UAClB2C,EAAeJ,OAAOpL,EAAOgH,GAC7ByE,EAAgBL,OAAOG,EAAWvE,GACtC5F,QAAQC,IAAI,SAAUmK,GACtBpK,QAAQC,IAAI,cAAeoK,GAC3B5E,EAAY,gBAAD,OAAiB9E,GAAOiG,SAAxB,QACXrB,GAAe,GACftG,EAAWd,cAAc2B,QACtBoL,SAASjM,EAAWf,QAAS0H,GAC7B2E,KAAK,CACJJ,SAAUH,OAAOK,GACjBG,GAAI7J,GAAOa,iBACXiJ,KAAMxL,EAAWf,QACjBwM,MAAON,IAERO,KAAK,SAAS,SAAC3C,GACdhI,QAAQC,IAAI+H,GACZvC,EAAY,uDACZF,GAAe,EAChB,IACAqF,MAAK,SAACC,GACL7K,QAAQC,IAAI4K,GACZpF,EAAY,YAAD,OACG9E,GAAOiG,SADV,+CAGXrB,GAAe,GACf3F,EAASD,EAAUV,EAAWf,SAC/B,GACJ,CAgtByBiN,GACArD,IACD,EAPH,SASGxC,EACG,OACA,YAAcc,EAAmB,iBAOjD,eAAC,EAAD,cAMR,eAAC,EAAD,CAAa7D,GAAI,SAAUC,GAAI,SAAU+B,GAAG,cAA5C,SACE,gBAACM,GAAD,CACExC,KAAM,EACNgG,MAAO,CACLS,QAAS,GACTC,SAAU,KACVC,UAAW,GACXC,aAAc,GACdE,WAAY,gBAEd1G,MAAI,EATN,UAWE,eAAC,EAAD,CAAaJ,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,SACE,gBAAC,EAAD,CAAaH,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,UACE,eAACsC,GAAD,CACEyD,IAAK,WACLC,IAAK,4BACLhE,UAAU,mBAEZ,eAAC,EAAD,CAAmB6D,MAAO,CAAEa,UAAW,SAAUE,SAAU,IAA3D,4BAGA,eAAC,EAAD,IACCG,OAAOrK,EAAKP,cAAgBgC,GAAOwG,YAClC,uCACE,eAAC,EAAD,CAAakB,MAAO,CAAEa,UAAW,UAAjC,iCAGA,gBAAC,EAAD,CAAmBb,MAAO,CAAEa,UAAW,UAAvC,gCACsBvI,GAAOiG,SAD7B,SAGA,eAAC,EAAD,IACA,eAAC5B,GAAD,CAAYwE,OAAQ,SAAUC,KAAM9I,GAAOgH,iBAA3C,SACGhH,GAAO+G,iBAIZ,uCACE,gBAAC,EAAD,CACErF,KAAM,EACNE,GAAI,SACJC,GAAI,SACJ6F,MAAO,CAAEa,UAAW,SAAUZ,QAAS,QAASjG,KAAM,GAJxD,UAME,gBAAC,EAAD,CACEgG,MAAO,CACLa,UAAW,SACXE,SAAU,GACVd,QAAS,eACToB,cAAe,SALnB,UAUE,eAAC5E,GAAD,CACEyD,IAAK,UACLC,IAAK,kCACLhE,UAAU,iBAEX7D,GAAO0G,cAAe,IACvB,uBAAMgB,MAAO,CAAEe,SAAU,IAAzB,oBAGF,eAAC,EAAD,CACEf,MAAO,CAAEa,UAAW,SAAUZ,QAAS,QADzC,oCAOsB,KAAvBrJ,EAAWf,SACiB,OAA7Be,EAAWd,cACT,gBAAC,EAAD,CACEqE,GAAI,SACJD,GAAI,SACJ8F,MAAO,CAAEC,QAAS,QAASY,UAAW,UAHxC,UAKE,gBAAC,EAAD,CACEb,MAAO,CACLa,UAAW,UAFf,4BAKkBvI,GAAOU,QAAQQ,KALjC,cAOA,eAAC,EAAD,IAWA,eAAC6C,GAAD,CACEF,UAAU,uBACVmF,QAAS,SAACC,GACRA,EAAEC,iBACFjK,EAASO,KACT2H,IACD,EANH,qBAgDyB,KAAxB7I,EAAWZ,SACV,uCACE,eAAC,EAAD,IACA,eAAC,EAAD,CACEgK,MAAO,CACLa,UAAW,UAFf,SAKGjK,EAAWZ,cAGd,QAGN,uCACE,eAAC,EAAD,CACEgK,MAAO,CACLa,UAAW,UAFf,SAKG1D,IAEH,eAAC,EAAD,IACA,gBAAC,EAAD,CAAahD,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,UACE,eAACsC,GAAD,CACEJ,UAAU,gBACVsF,SAAUxE,EAAc,EAAI,EAC5BqE,QAAS,SAACC,GACRA,EAAEC,iBAl1BC,WAC3B,IAAIuB,EAAiBtF,EAAc,EAC/BsF,EAAiB,IACnBA,EAAiB,GAEnBrF,EAAeqF,GACf,IAAIxM,EAAO+B,GAAOyG,UACdd,EAAmB0D,OACpBpL,EAAOwM,EAAkB,MAE5B7E,EAAgBD,EACjB,CAw0ByB+E,EACD,EANH,eAUA,eAAC,EAAD,IACA,eAAC,EAAD,IACA,eAAC,EAAD,CACEhD,MAAO,CAAEa,UAAW,SAAUE,SAAU,IAD1C,SAGGtD,IAEH,eAAC,EAAD,IACA,eAAC,EAAD,IACA,eAAClB,GAAD,CACEJ,UAAU,gBACVsF,SAAUxE,EAAc,EAAI,EAC5BqE,QAAS,SAACC,GACRA,EAAEC,iBAz1BC,WAC3B,IAAIuB,EAAiBtF,EAAc,EAC/BsF,EAAiB,IACnBA,EAAiB,GAEnBrF,EAAeqF,GACf,IAAIxM,EAAO+B,GAAOyG,UACdd,EAAmB0D,OACpBpL,EAAOwM,EAAkB,MAE5B7E,EAAgBD,EACjB,CA+0ByBgF,EACD,EANH,kBAWF,eAAC,EAAD,IAEA,eAAC,EAAD,CACE9I,GAAI,SACJD,GAAI,SACJD,GAAI,MACJ+F,MAAO,CAAEW,UAAW,IAJtB,SAME,eAACtE,GAAD,CACEoF,SAAUxE,EAAc,EAAI,EAC5Bd,UAAU,UACVmF,QAAS,SAACC,GACRA,EAAEC,iBAx5BT,WACjB,IAAIjL,EAAO+B,GAAOyG,UACd+C,EAAWxJ,GAAO8G,UAClB2C,EAAeJ,OAAOpL,EAAOkH,GAC7BuE,EAAgBL,OAAOG,EAAWrE,GACtC9F,QAAQC,IAAI,SAAUmK,GACtBpK,QAAQC,IAAI,cAAeoK,GAC3B5E,EAAY,gBAAD,OAAiB9E,GAAOiG,SAAxB,QACXrB,GAAe,GACftG,EAAWd,cAAc2B,QACtByL,WAAWtM,EAAWf,QAAS4H,GAC/ByE,KAAK,CACJJ,SAAUH,OAAOK,GACjBG,GAAI7J,GAAOa,iBACXiJ,KAAMxL,EAAWf,QACjBwM,MAAON,IAERO,KAAK,SAAS,SAAC3C,GACdhI,QAAQC,IAAI+H,GACZvC,EAAY,uDACZF,GAAe,EAChB,IACAqF,MAAK,SAACC,GACL7K,QAAQC,IAAI4K,GACZpF,EAAY,YAAD,OACG9E,GAAOiG,SADV,+CAGXrB,GAAe,GACf3F,EAASD,EAAUV,EAAWf,SAC/B,GACJ,CA23ByBsN,GACA1D,IACD,EAPH,SASGxC,EACG,OACA,YAAcgB,EAAmB,iBAOjD,eAAC,EAAD,SAGJ,eAAC,EAAD,CAAajE,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,SACE,gBAAC,EAAD,CAAaH,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,UACE,eAACsC,GAAD,CACEyD,IAAK,WACLC,IAAK,4BACLhE,UAAU,mBAEZ,eAAC,EAAD,CAAmB6D,MAAO,CAAEa,UAAW,SAAUE,SAAU,IAA3D,4BAGA,eAAC,EAAD,IACCG,OAAOrK,EAAKP,cAAgBgC,GAAO2G,YAClC,uCACE,eAAC,EAAD,CAAae,MAAO,CAAEa,UAAW,UAAjC,iCAGA,gBAAC,EAAD,CAAmBb,MAAO,CAAEa,UAAW,UAAvC,gCACsBvI,GAAOiG,SAD7B,SAGA,eAAC,EAAD,IACA,eAAC5B,GAAD,CAAYwE,OAAQ,SAAUC,KAAM9I,GAAOgH,iBAA3C,SACGhH,GAAO+G,iBAIZ,uCACE,gBAAC,EAAD,CACErF,KAAM,EACNE,GAAI,SACJC,GAAI,SACJ6F,MAAO,CAAEa,UAAW,SAAUZ,QAAS,QAASjG,KAAM,GAJxD,UAME,gBAAC,EAAD,CACEgG,MAAO,CACLa,UAAW,SACXE,SAAU,GACVd,QAAS,eACToB,cAAe,SALnB,UAUE,eAAC5E,GAAD,CACEyD,IAAK,UACLC,IAAK,kCACLhE,UAAU,iBAEX7D,GAAO6G,cAAe,IACvB,uBAAMa,MAAO,CAAEe,SAAU,IAAzB,oBAGF,eAAC,EAAD,CACEf,MAAO,CAAEa,UAAW,SAAUZ,QAAS,QADzC,oCAOsB,KAAvBrJ,EAAWf,SACiB,OAA7Be,EAAWd,cACT,gBAAC,EAAD,CACEqE,GAAI,SACJD,GAAI,SACJ8F,MAAO,CAAEC,QAAS,QAASY,UAAW,UAHxC,UAKE,gBAAC,EAAD,CACEb,MAAO,CACLa,UAAW,UAFf,4BAKkBvI,GAAOU,QAAQQ,KALjC,cAOA,eAAC,EAAD,IAWA,eAAC6C,GAAD,CACEF,UAAU,uBACVmF,QAAS,SAACC,GACRA,EAAEC,iBACFjK,EAASO,KACT2H,IACD,EANH,qBAgDyB,KAAxB7I,EAAWZ,SACV,uCACE,eAAC,EAAD,IACA,eAAC,EAAD,CACEgK,MAAO,CACLa,UAAW,UAFf,SAKGjK,EAAWZ,cAGd,QAGN,uCACE,eAAC,EAAD,CACEgK,MAAO,CACLa,UAAW,UAFf,SAKG1D,IAEH,eAAC,EAAD,IACA,gBAAC,EAAD,CAAahD,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,UACE,eAACsC,GAAD,CACEJ,UAAU,gBACVsF,SAAUxE,EAAc,EAAI,EAC5BqE,QAAS,SAACC,GACRA,EAAEC,iBA9+BC,WAC3B,IAAI4B,EAAiBzF,EAAc,EAC/ByF,EAAiB,IACnBA,EAAiB,GAEnBxF,EAAewF,GACf,IAAI7M,EAAO+B,GAAO4G,UACdf,EAAmBwD,OACpBpL,EAAO6M,EAAkB,MAE5BhF,GAAgBD,EACjB,CAo+ByBkF,EACD,EANH,eAUA,eAAC,EAAD,IACA,eAAC,EAAD,IACA,eAAC,EAAD,CACErD,MAAO,CAAEa,UAAW,SAAUE,SAAU,IAD1C,SAGGpD,IAEH,eAAC,EAAD,IACA,eAAC,EAAD,IACA,eAACpB,GAAD,CACEJ,UAAU,gBACVsF,SAAUxE,EAAc,EAAI,EAC5BqE,QAAS,SAACC,GACRA,EAAEC,iBAr/BC,WAC3B,IAAI4B,EAAiBzF,EAAc,EAC/ByF,EAAiB,IACnBA,EAAiB,GAEnBxF,EAAewF,GACf,IAAI7M,EAAO+B,GAAO4G,UACdf,EAAmBwD,OACpBpL,EAAO6M,EAAkB,MAE5BhF,GAAgBD,EACjB,CA2+ByBmF,EACD,EANH,kBAWF,eAAC,EAAD,IAEA,eAAC,EAAD,CACEnJ,GAAI,SACJD,GAAI,SACJD,GAAI,MACJ+F,MAAO,CAAEW,UAAW,IAJtB,SAME,eAACtE,GAAD,CACEoF,SAAUxE,EAAc,EAAI,EAC5Bd,UAAU,UACVmF,QAAS,SAACC,GACRA,EAAEC,iBApjCT,WACjB,IAAIjL,EAAO+B,GAAO4G,UACd4C,EAAWxJ,GAAO8G,UAClB2C,EAAeJ,OAAOpL,EAAOoH,GAC7BqE,EAAgBL,OAAOG,EAAWnE,GACtChG,QAAQC,IAAI,SAAUmK,GACtBpK,QAAQC,IAAI,cAAeoK,GAC3B5E,EAAY,gBAAD,OAAiB9E,GAAOiG,SAAxB,QACXrB,GAAe,GACftG,EAAWd,cAAc2B,QACtB8L,WAAW3M,EAAWf,QAAS8H,GAC/BuE,KAAK,CACJJ,SAAUH,OAAOK,GACjBG,GAAI7J,GAAOa,iBACXiJ,KAAMxL,EAAWf,QACjBwM,MAAON,IAERO,KAAK,SAAS,SAAC3C,GACdhI,QAAQC,IAAI+H,GACZvC,EAAY,uDACZF,GAAe,EAChB,IACAqF,MAAK,SAACC,GACL7K,QAAQC,IAAI4K,GACZpF,EAAY,YAAD,OACG9E,GAAOiG,SADV,+CAGXrB,GAAe,GACf3F,EAASD,EAAUV,EAAWf,SAC/B,GACJ,CAuhCyB2N,GACA/D,IACD,EAPH,SASGxC,EACG,OACA,YAAckB,GAAmB,iBAOjD,eAAC,EAAD,cAMR,eAAC,EAAD,CACEnE,KAAM,EACNG,GAAI,SACJ6F,MAAO,CAAEyD,gBAAiB,kBAH5B,SAKE,eAAC,EAAD,CAAavJ,GAAI,SAAUC,GAAI,SAAUgC,UAAU,gBAAnD,SACE,gBAACK,GAAD,CACExC,KAAM,EACNgG,MAAO,CAAES,QAAS,SAAUC,SAAU,MACtCtG,MAAI,EAHN,UAKE,eAAC,EAAD,CACEJ,KAAM,EACNE,GAAI,SACJC,GAAI,SACJ6F,MAAO,CAAEC,QAAS,WAJpB,SAME,eAAC,EAAD,CACED,MAAO,CAAEa,UAAW,OAAQG,MAAO,UAAWD,SAAU,IAD1D,mCAMF,eAAC,EAAD,CACE/G,KAAM,EACNE,GAAI,SACJC,GAAI,SACJ6F,MAAO,CAAEC,QAAS,WAJpB,SAME,eAACzD,GAAD,CAAmBxC,KAAM,EAAGI,MAAI,EAAhC,SACE,gBAAC,EAAD,CACEJ,KAAM,EACNE,GAAI,SACJC,GAAI,SACJ6F,MAAO,CAAEC,QAAS,WAJpB,UAME,oBACEmB,KAAK,IACLpB,MAAO,CAAE0D,MAAO,QAASC,YAAa,IACtCxC,OAAO,SAHT,SAKE,eAAC1E,GAAD,CACEyD,IAAK,UACLC,IAAK,6BACLH,MAAO,CAAEI,OAAQ,OAAQC,aAAc,EAAGK,SAAU,QAGxD,oBACEU,KAAK,IACLpB,MAAO,CAAE0D,MAAO,QAASC,YAAa,IACtCxC,OAAO,SAHT,SAKE,eAAC1E,GAAD,CACEyD,IAAK,UACLC,IAAK,6BACLH,MAAO,CAAEI,OAAQ,OAAQC,aAAc,EAAGK,SAAU,QAGxD,oBACEU,KAAK,IACLpB,MAAO,CAAE0D,MAAO,QAASC,YAAa,IACtCxC,OAAO,SAHT,SAKE,eAAC1E,GAAD,CACEyD,IAAK,YACLC,IAAK,+BACLH,MAAO,CAAEI,OAAQ,OAAQC,aAAc,EAAGK,SAAU,QAGxD,oBACEU,KAAK,IACLpB,MAAO,CAAE0D,MAAO,QAASC,YAAa,IACtCxC,OAAO,SAHT,SAKE,eAAC1E,GAAD,CACEyD,IAAK,UACLC,IAAK,6BACLH,MAAO,CAAEI,OAAQ,OAAQC,aAAc,EAAGK,SAAU,wBAWzE,ECr9CckD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,E,OCFDO,IAASC,OACP,eAAC,IAAD,CAAUlN,MAAOA,EAAjB,SACE,eAAC,GAAD,MAEFmN,SAASC,eAAe,SAM1BX,I","file":"static/js/main.38d97586.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\n// import moment from 'moment';\r\nimport \"./Timer.css\";\r\n\r\nclass CountDown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.count = this.count.bind(this);\r\n    this.state = {\r\n      days: 0,\r\n      minutes: 0,\r\n      hours: 0,\r\n      secounds: 0,\r\n      time_up: \"\"\r\n    };\r\n    this.x = null;\r\n    this.deadline = null;\r\n  }\r\n  count() {\r\n    var now = new Date().getTime();\r\n    var t = this.deadline - now;\r\n    var dd = Math.floor(t / (1000 * 60 * 60 * 24));\r\n    var hh = Math.floor((t % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    var mm = Math.floor((t % (1000 * 60 * 60)) / (1000 * 60));\r\n    var ss = Math.floor((t % (1000 * 60)) / 1000);\r\n\r\n    var days = dd < 10 ? \"0\" + dd : dd;\r\n    var hours = hh < 10 ? \"0\" + hh : hh;\r\n    var minutes = mm < 10 ? \"0\" + mm : mm;\r\n    var seconds = ss < 10 ? \"0\" + ss : ss;\r\n\r\n    this.setState({ days, minutes, hours, seconds });\r\n\r\n    if (t < 0) {\r\n      clearInterval(this.x);\r\n      this.setState({\r\n        days: 0,\r\n        minutes: 0,\r\n        hours: 0,\r\n        seconds: 0,\r\n        time_up: \"TIME IS UP\"\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.deadline = new Date(\"Nov 29, 2021 17:00:00\").getTime();\r\n\r\n    this.x = setInterval(this.count, 1000);\r\n  }\r\n\r\n  render() {\r\n    const { days, seconds, hours, minutes } = this.state;\r\n    return (\r\n      <div id=\"countdown\">\r\n        <div className=\"comingtitle\">\r\n          Mint Here\r\n        </div>\r\n        <div className=\"detailedlist\">                      \r\n            \r\n        </div>\r\n              \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountDown;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { connectcoinbase } from \"./redux/blockchain/blockchainActionsCoinbase\";\r\nimport { connectwalletcon } from \"./redux/blockchain/blockchainActionsWallet\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport Timer from \"./Countdown/Timer\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Faq from \"react-faq-component\";\r\n// import $ from 'jquery';\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: var(--secondary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: var(--primary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px dashed var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [mintAmount1, setMintAmount1] = useState(1);\r\n  const [mintAmount2, setMintAmount2] = useState(1);\r\n  const [mintAmount3, setMintAmount3] = useState(1);\r\n  const [mintAmount4, setMintAmount4] = useState(1);\r\n  const [totalCostamount1, setTotalAmount1] = useState(0.88);\r\n  const [totalCostamount2, setTotalAmount2] = useState(0.44);\r\n  const [totalCostamount3, setTotalAmount3] = useState(0.18);\r\n  const [totalCostamount4, setTotalAmount4] = useState(0.088);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"0x4a4a22f524343625f0ca407943dc7bd1fec08f03\",\r\n    SCAN_LINK:\r\n      \"https://rinkeby.etherscan.io/address/0x4a4a22f524343625f0ca407943dc7bd1fec08f03\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY1: 1,\r\n    WEI_COST1: 0,\r\n    DISPLAY_COST1: 0,\r\n    MAX_SUPPLY2: 1,\r\n    WEI_COST2: 0,\r\n    DISPLAY_COST2: 0,\r\n    MAX_SUPPLY3: 1,\r\n    WEI_COST3: 0,\r\n    DISPLAY_COST3: 0,\r\n    MAX_SUPPLY4: 1,\r\n    WEI_COST4: 0,\r\n    DISPLAY_COST4: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  // Platinum\r\n  const claimNFTs1 = () => {\r\n    let cost = CONFIG.WEI_COST1;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount1);\r\n    let totalGasLimit = String(gasLimit * mintAmount1);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .PlatinumMint(blockchain.account, mintAmount1)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount1 = () => {\r\n    let newMintAmount1 = mintAmount1 - 1;\r\n    if (newMintAmount1 < 1) {\r\n      newMintAmount1 = 1;\r\n    }\r\n    setMintAmount1(newMintAmount1);\r\n    let cost = CONFIG.WEI_COST1;\r\n    let totalCostamount1 = String(\r\n      (cost * newMintAmount1) / 1000000000000000000\r\n    );\r\n    setTotalAmount1(totalCostamount1);\r\n  };\r\n  const incrementMintAmount1 = () => {\r\n    let newMintAmount1 = mintAmount1 + 1;\r\n    if (newMintAmount1 > 3) {\r\n      newMintAmount1 = 3;\r\n    }\r\n    setMintAmount1(newMintAmount1);\r\n    let cost = CONFIG.WEI_COST1;\r\n    let totalCostamount1 = String(\r\n      (cost * newMintAmount1) / 1000000000000000000\r\n    );\r\n    setTotalAmount1(totalCostamount1);\r\n  };\r\n\r\n  // Gold\r\n  const claimNFTs2 = () => {\r\n    let cost = CONFIG.WEI_COST2;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount2);\r\n    let totalGasLimit = String(gasLimit * mintAmount2);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .GoldMint(blockchain.account, mintAmount2)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount2 = () => {\r\n    let newMintAmount2 = mintAmount2 - 1;\r\n    if (newMintAmount2 < 1) {\r\n      newMintAmount2 = 1;\r\n    }\r\n    setMintAmount2(newMintAmount2);\r\n    let cost = CONFIG.WEI_COST2;\r\n    let totalCostamount2 = String(\r\n      (cost * newMintAmount2) / 1000000000000000000\r\n    );\r\n    setTotalAmount2(totalCostamount2);\r\n  };\r\n  const incrementMintAmount2 = () => {\r\n    let newMintAmount2 = mintAmount2 + 1;\r\n    if (newMintAmount2 > 3) {\r\n      newMintAmount2 = 3;\r\n    }\r\n    setMintAmount2(newMintAmount2);\r\n    let cost = CONFIG.WEI_COST2;\r\n    let totalCostamount2 = String(\r\n      (cost * newMintAmount2) / 1000000000000000000\r\n    );\r\n    setTotalAmount2(totalCostamount2);\r\n  };\r\n\r\n  // Silver\r\n  const claimNFTs3 = () => {\r\n    let cost = CONFIG.WEI_COST3;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount3);\r\n    let totalGasLimit = String(gasLimit * mintAmount3);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .SilverMint(blockchain.account, mintAmount3)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount3 = () => {\r\n    let newMintAmount3 = mintAmount3 - 1;\r\n    if (newMintAmount3 < 1) {\r\n      newMintAmount3 = 1;\r\n    }\r\n    setMintAmount3(newMintAmount3);\r\n    let cost = CONFIG.WEI_COST3;\r\n    let totalCostamount3 = String(\r\n      (cost * newMintAmount3) / 1000000000000000000\r\n    );\r\n    setTotalAmount3(totalCostamount3);\r\n  };\r\n  const incrementMintAmount3 = () => {\r\n    let newMintAmount3 = mintAmount3 + 1;\r\n    if (newMintAmount3 > 3) {\r\n      newMintAmount3 = 3;\r\n    }\r\n    setMintAmount3(newMintAmount3);\r\n    let cost = CONFIG.WEI_COST3;\r\n    let totalCostamount3 = String(\r\n      (cost * newMintAmount3) / 1000000000000000000\r\n    );\r\n    setTotalAmount3(totalCostamount3);\r\n  };\r\n\r\n  // Bronze\r\n  const claimNFTs4 = () => {\r\n    let cost = CONFIG.WEI_COST4;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount4);\r\n    let totalGasLimit = String(gasLimit * mintAmount4);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .BronzeMint(blockchain.account, mintAmount4)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount4 = () => {\r\n    let newMintAmount4 = mintAmount4 - 1;\r\n    if (newMintAmount4 < 1) {\r\n      newMintAmount4 = 1;\r\n    }\r\n    setMintAmount4(newMintAmount4);\r\n    let cost = CONFIG.WEI_COST4;\r\n    let totalCostamount4 = String(\r\n      (cost * newMintAmount4) / 1000000000000000000\r\n    );\r\n    setTotalAmount4(totalCostamount4);\r\n  };\r\n  const incrementMintAmount4 = () => {\r\n    let newMintAmount4 = mintAmount4 + 1;\r\n    if (newMintAmount4 > 3) {\r\n      newMintAmount4 = 3;\r\n    }\r\n    setMintAmount4(newMintAmount4);\r\n    let cost = CONFIG.WEI_COST4;\r\n    let totalCostamount4 = String(\r\n      (cost * newMintAmount4) / 1000000000000000000\r\n    );\r\n    setTotalAmount4(totalCostamount4);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n      blockchain.smartContract.methods\r\n        .getPrice(4, blockchain.account)\r\n        .call((err, res) => {\r\n          setTotalAmount1(res / 1000000000000000000);\r\n        });\r\n      blockchain.smartContract.methods\r\n        .getPrice(3, blockchain.account)\r\n        .call((err, res) => {\r\n          setTotalAmount2(res / 1000000000000000000);\r\n        });\r\n      blockchain.smartContract.methods\r\n        .getPrice(2, blockchain.account)\r\n        .call((err, res) => {\r\n          setTotalAmount3(res / 1000000000000000000);\r\n        });\r\n      blockchain.smartContract.methods\r\n        .getPrice(1, blockchain.account)\r\n        .call((err, res) => {\r\n          setTotalAmount4(res / 1000000000000000000);\r\n        });\r\n\r\n      SET_CONFIG({\r\n        ...CONFIG,\r\n        WEI_COST1: totalCostamount1 * 1000000000000000000,\r\n        WEI_COST2: totalCostamount2 * 1000000000000000000,\r\n        WEI_COST3: totalCostamount3 * 1000000000000000000,\r\n        WEI_COST4: totalCostamount4 * 1000000000000000000,\r\n        DISPLAY_COST1: totalCostamount1,\r\n        DISPLAY_COST2: totalCostamount2,\r\n        DISPLAY_COST3: totalCostamount3,\r\n        DISPLAY_COST4: totalCostamount4,\r\n      });\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen>\r\n      <s.Container jc={\"center\"} ai={\"center\"} className=\"headermenu\">\r\n        <s.Container\r\n          jc={\"center\"}\r\n          ai={\"center\"}\r\n          style={{ display: \"inline-block\" }}\r\n        >\r\n          <img\r\n            alt=\"logo\"\r\n            src={\"/config/images/logo.png\"}\r\n            className=\"headerlogo\"\r\n          />\r\n          {/* <s.Container jc={\"center\"} ai={\"center\"} className=\"headermenusubdiv\">\r\n                <a href=\"#about\">Programs</a>\r\n                <a href=\"#roadmap\">Tuition</a>                        \r\n                <a href=\"#faq\">Class</a>\r\n                <a href=\"#ourteam\">Scheduel</a>\t      \r\n                <a href=\"#ourteam\">Why NFT Clinic</a>\t      \r\n                <a href=\"#ourteam\">About</a>\t\r\n                <a href=\"#\" target=\"_black\" style={{ marginLeft: \"15% !important\"}} ><StyledImg alt={\"opensea\"} src={\"/config/images/opensea.svg\"} style={{ border: \"none\", borderRadius: 0, maxWidth: 38, background: \"none\"}} /></a>\r\n                <a href=\"#\" target=\"_black\" ><StyledImg alt={\"discord\"} src={\"/config/images/discord.svg\"} style={{ border: \"none\", borderRadius: 0, maxWidth: 38, background: \"none\"}} /></a>\r\n                <a href=\"#\" target=\"_black\" ><StyledImg alt={\"twitter\"} src={\"/config/images/twitter.svg\"} style={{ border: \"none\", borderRadius: 0, maxWidth: 38, background: \"none\"}} /></a>\r\n            </s.Container> */}\r\n        </s.Container>\r\n      </s.Container>\r\n      <s.Container jc={\"center\"} ai={\"center\"}>\r\n        <StyledImg\r\n          alt={\"example\"}\r\n          src={\"/config/images/topbanner.jpg\"}\r\n          style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n        />\r\n      </s.Container>\r\n      <s.Container\r\n        jc={\"center\"}\r\n        ai={\"center\"}\r\n        id=\"about\"\r\n        style={{ position: \"absolute\", top: 200 }}\r\n      >\r\n        <ResponsiveWrapper\r\n          flex={1}\r\n          style={{\r\n            padding: 24,\r\n            maxWidth: 1250,\r\n            marginTop: 50,\r\n            marginBottom: 20,\r\n          }}\r\n          test\r\n        >\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <s.TextTitle\r\n              className=\"mobile-headertext\"\r\n              style={{\r\n                textAlign: \"left\",\r\n                fontFamily: \"Poppins-Bold\",\r\n                fontSize: 48,\r\n                color: \"var(--primary-text)\",\r\n                marginBottom: 30,\r\n              }}\r\n            >\r\n              The First Decentralized Academy for NFT Creators\r\n            </s.TextTitle>\r\n            <s.TextDescription className=\"mintitems-desc\">\r\n              NFT Clinic is the most prestigious and recognized academy for NFT\r\n              Creators. Our Certification process to our students covers all\r\n              known aspects of Non-Fungible Assets existing in the Blockchain\r\n              environment today. Investors, Brands, Influencers and Celebrities\r\n              depend on our expertise and training to assure them a safe,\r\n              profitable, and secure involvement prior to working with an NFT.\r\n              Validating and understanding your skills through our exam-based\r\n              certification process will provide insights into the workings of\r\n              Ethereum and the Non-Fungible Tokens.\r\n            </s.TextDescription>\r\n          </s.Container>\r\n          <s.Container\r\n            flex={1}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{ display: \"initial\" }}\r\n          ></s.Container>\r\n        </ResponsiveWrapper>\r\n      </s.Container>\r\n\r\n      <s.Container jc={\"center\"} ai={\"center\"}>\r\n        <ResponsiveWrapper\r\n          flex={1}\r\n          style={{ padding: 24, maxWidth: 1450, display: \"none\" }}\r\n          test\r\n        >\r\n          <Timer />\r\n        </ResponsiveWrapper>\r\n      </s.Container>\r\n\r\n      <s.Container jc={\"center\"} ai={\"center\"} id=\"mintsection\">\r\n        <ResponsiveWrapper\r\n          flex={1}\r\n          style={{\r\n            padding: 24,\r\n            maxWidth: 1250,\r\n            marginTop: 50,\r\n            marginBottom: 20,\r\n            fontFamily: \"Poppins-Bold\",\r\n          }}\r\n          test\r\n        >\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n              <StyledImg\r\n                alt={\"Mintimg1\"}\r\n                src={\"/config/images/Platinum.gif\"}\r\n                className=\"mintsectionimg\"\r\n              />\r\n              <s.TextDescription style={{ textAlign: \"center\", fontSize: 23 }}>\r\n                Pick 12 Classes\r\n              </s.TextDescription>\r\n              <s.TextDescription style={{ textAlign: \"center\", fontSize: 18 }}>\r\n                {data.totalPlatinumSupply}\r\n              </s.TextDescription>\r\n              <s.SpacerSmall />\r\n              {Number(data.totalPlatinumSupply) >= CONFIG.MAX_SUPPLY1 ? (\r\n                <>\r\n                  <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                    The sale has ended.\r\n                  </s.TextTitle>\r\n                  <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                    You can still find {CONFIG.NFT_NAME} on\r\n                  </s.TextDescription>\r\n                  <s.SpacerSmall />\r\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                    {CONFIG.MARKETPLACE}\r\n                  </StyledLink>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <s.Container\r\n                    flex={1}\r\n                    jc={\"center\"}\r\n                    ai={\"center\"}\r\n                    style={{ textAlign: \"center\", display: \"block\", flex: 0 }}\r\n                  >\r\n                    <s.TextTitle\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        fontSize: 48,\r\n                        display: \"inline-block\",\r\n                        verticalAlign: \"super\",\r\n                      }}\r\n                    >\r\n                      {/* 1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                                {CONFIG.NETWORK.SYMBOL}. */}\r\n                      <StyledImg\r\n                        alt={\"Ethlogo\"}\r\n                        src={\"/config/images/EthereumLogo.svg\"}\r\n                        className=\"ethlogoimage\"\r\n                      />\r\n                      {CONFIG.DISPLAY_COST1}{\" \"}\r\n                      <font style={{ fontSize: 23 }}>ETH</font>\r\n                    </s.TextTitle>\r\n                    {/* <s.SpacerXSmall /> */}\r\n                    <s.TextDescription\r\n                      style={{ textAlign: \"center\", display: \"none\" }}\r\n                    >\r\n                      Excluding gas fees.\r\n                    </s.TextDescription>\r\n                  </s.Container>\r\n                  {/* <s.SpacerSmall /> */}\r\n                  {blockchain.account === \"\" ||\r\n                  blockchain.smartContract === null ? (\r\n                    <s.Container\r\n                      ai={\"center\"}\r\n                      jc={\"center\"}\r\n                      style={{ display: \"block\", textAlign: \"center\" }}\r\n                    >\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        Connect to the {CONFIG.NETWORK.NAME} network\r\n                      </s.TextDescription>\r\n                      <s.SpacerSmall />\r\n                      {/* <StyledButton\r\n                                    className=\"mintbtn\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connect());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    Connect\r\n                                  </StyledButton> */}\r\n                      <StyledButton\r\n                        className=\"mintbtn walletbtncon\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(connect());\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {/* <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/metamask.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    /> */}\r\n                        Connect\r\n                      </StyledButton>\r\n                      {/* <StyledButton\r\n                                    className=\"mintbtn walletbtncon\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connectcoinbase());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/coinbase.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    />\r\n                                    Coinbase\r\n                                  </StyledButton>\r\n                                  <StyledButton\r\n                                    className=\"mintbtn walletbtncon\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connectwalletcon());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/walletconnect.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    />\r\n                                    WalletConnect\r\n                                  </StyledButton> */}\r\n                      {blockchain.errorMsg !== \"\" ? (\r\n                        <>\r\n                          <s.SpacerSmall />\r\n                          <s.TextDescription\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            {blockchain.errorMsg}\r\n                          </s.TextDescription>\r\n                        </>\r\n                      ) : null}\r\n                    </s.Container>\r\n                  ) : (\r\n                    <>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        {feedback}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                        <StyledRoundButton\r\n                          className=\"mintnumberbtn\"\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            decrementMintAmount1();\r\n                          }}\r\n                        >\r\n                          -\r\n                        </StyledRoundButton>\r\n                        <s.SpacerMedium />\r\n                        <s.SpacerMedium />\r\n                        <s.TextDescription\r\n                          style={{ textAlign: \"center\", fontSize: 45 }}\r\n                        >\r\n                          {mintAmount1}\r\n                        </s.TextDescription>\r\n                        <s.SpacerMedium />\r\n                        <s.SpacerMedium />\r\n                        <StyledRoundButton\r\n                          className=\"mintnumberbtn\"\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            incrementMintAmount1();\r\n                          }}\r\n                        >\r\n                          +\r\n                        </StyledRoundButton>\r\n                      </s.Container>\r\n                      <s.SpacerSmall />\r\n\r\n                      <s.Container\r\n                        ai={\"center\"}\r\n                        jc={\"center\"}\r\n                        fd={\"row\"}\r\n                        style={{ marginTop: 25 }}\r\n                      >\r\n                        <StyledButton\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          className=\"mintbtn\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            claimNFTs1();\r\n                            getData();\r\n                          }}\r\n                        >\r\n                          {claimingNft\r\n                            ? \"BUSY\"\r\n                            : \"MINT for \" + totalCostamount1 + \" ETH\"}\r\n                        </StyledButton>\r\n                      </s.Container>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <s.SpacerMedium />\r\n            </s.Container>\r\n          </s.Container>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n              <StyledImg\r\n                alt={\"Mintimg1\"}\r\n                src={\"/config/images/Gold.gif\"}\r\n                className=\"mintsectionimg\"\r\n              />\r\n              <s.TextDescription style={{ textAlign: \"center\", fontSize: 21 }}>\r\n                Pick 9 Classes\r\n              </s.TextDescription>\r\n              <s.SpacerSmall />\r\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY2 ? (\r\n                <>\r\n                  <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                    The sale has ended.\r\n                  </s.TextTitle>\r\n                  <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                    You can still find {CONFIG.NFT_NAME} on\r\n                  </s.TextDescription>\r\n                  <s.SpacerSmall />\r\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                    {CONFIG.MARKETPLACE}\r\n                  </StyledLink>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <s.Container\r\n                    flex={1}\r\n                    jc={\"center\"}\r\n                    ai={\"center\"}\r\n                    style={{ textAlign: \"center\", display: \"block\", flex: 0 }}\r\n                  >\r\n                    <s.TextTitle\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        fontSize: 48,\r\n                        display: \"inline-block\",\r\n                        verticalAlign: \"super\",\r\n                      }}\r\n                    >\r\n                      {/* 1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                                {CONFIG.NETWORK.SYMBOL}. */}\r\n                      <StyledImg\r\n                        alt={\"Ethlogo\"}\r\n                        src={\"/config/images/EthereumLogo.svg\"}\r\n                        className=\"ethlogoimage\"\r\n                      />\r\n                      {CONFIG.DISPLAY_COST2}{\" \"}\r\n                      <font style={{ fontSize: 23 }}>ETH</font>\r\n                    </s.TextTitle>\r\n                    {/* <s.SpacerXSmall /> */}\r\n                    <s.TextDescription\r\n                      style={{ textAlign: \"center\", display: \"none\" }}\r\n                    >\r\n                      Excluding gas fees.\r\n                    </s.TextDescription>\r\n                  </s.Container>\r\n                  {/* <s.SpacerSmall /> */}\r\n                  {blockchain.account === \"\" ||\r\n                  blockchain.smartContract === null ? (\r\n                    <s.Container\r\n                      ai={\"center\"}\r\n                      jc={\"center\"}\r\n                      style={{ display: \"block\", textAlign: \"center\" }}\r\n                    >\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        Connect to the {CONFIG.NETWORK.NAME} network\r\n                      </s.TextDescription>\r\n                      <s.SpacerSmall />\r\n                      {/* <StyledButton\r\n                                    className=\"mintbtn\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connect());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    Connect\r\n                                  </StyledButton> */}\r\n                      <StyledButton\r\n                        className=\"mintbtn walletbtncon\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(connect());\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {/* <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/metamask.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    /> */}\r\n                        Connect\r\n                      </StyledButton>\r\n                      {/* <StyledButton\r\n                                    className=\"mintbtn walletbtncon\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connectcoinbase());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/coinbase.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    />\r\n                                    Coinbase\r\n                                  </StyledButton>\r\n                                  <StyledButton\r\n                                    className=\"mintbtn walletbtncon\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connectwalletcon());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/walletconnect.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    />\r\n                                    WalletConnect\r\n                                  </StyledButton> */}\r\n                      {blockchain.errorMsg !== \"\" ? (\r\n                        <>\r\n                          <s.SpacerSmall />\r\n                          <s.TextDescription\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            {blockchain.errorMsg}\r\n                          </s.TextDescription>\r\n                        </>\r\n                      ) : null}\r\n                    </s.Container>\r\n                  ) : (\r\n                    <>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        {feedback}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                        <StyledRoundButton\r\n                          className=\"mintnumberbtn\"\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            decrementMintAmount2();\r\n                          }}\r\n                        >\r\n                          -\r\n                        </StyledRoundButton>\r\n                        <s.SpacerMedium />\r\n                        <s.SpacerMedium />\r\n                        <s.TextDescription\r\n                          style={{ textAlign: \"center\", fontSize: 45 }}\r\n                        >\r\n                          {mintAmount2}\r\n                        </s.TextDescription>\r\n                        <s.SpacerMedium />\r\n                        <s.SpacerMedium />\r\n                        <StyledRoundButton\r\n                          className=\"mintnumberbtn\"\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            incrementMintAmount2();\r\n                          }}\r\n                        >\r\n                          +\r\n                        </StyledRoundButton>\r\n                      </s.Container>\r\n                      <s.SpacerSmall />\r\n\r\n                      <s.Container\r\n                        ai={\"center\"}\r\n                        jc={\"center\"}\r\n                        fd={\"row\"}\r\n                        style={{ marginTop: 25 }}\r\n                      >\r\n                        <StyledButton\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          className=\"mintbtn\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            claimNFTs2();\r\n                            getData();\r\n                          }}\r\n                        >\r\n                          {claimingNft\r\n                            ? \"BUSY\"\r\n                            : \"MINT for \" + totalCostamount2 + \" ETH\"}\r\n                        </StyledButton>\r\n                      </s.Container>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <s.SpacerMedium />\r\n            </s.Container>\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n      </s.Container>\r\n\r\n      <s.Container jc={\"center\"} ai={\"center\"} id=\"mintsection\">\r\n        <ResponsiveWrapper\r\n          flex={1}\r\n          style={{\r\n            padding: 24,\r\n            maxWidth: 1250,\r\n            marginTop: 50,\r\n            marginBottom: 20,\r\n            fontFamily: \"Poppins-Bold\",\r\n          }}\r\n          test\r\n        >\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n              <StyledImg\r\n                alt={\"Mintimg1\"}\r\n                src={\"/config/images/Silver.gif\"}\r\n                className=\"mintsectionimg\"\r\n              />\r\n              <s.TextDescription style={{ textAlign: \"center\", fontSize: 21 }}>\r\n                Pick 6 Classes\r\n              </s.TextDescription>\r\n              <s.SpacerSmall />\r\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY3 ? (\r\n                <>\r\n                  <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                    The sale has ended.\r\n                  </s.TextTitle>\r\n                  <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                    You can still find {CONFIG.NFT_NAME} on\r\n                  </s.TextDescription>\r\n                  <s.SpacerSmall />\r\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                    {CONFIG.MARKETPLACE}\r\n                  </StyledLink>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <s.Container\r\n                    flex={1}\r\n                    jc={\"center\"}\r\n                    ai={\"center\"}\r\n                    style={{ textAlign: \"center\", display: \"block\", flex: 0 }}\r\n                  >\r\n                    <s.TextTitle\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        fontSize: 48,\r\n                        display: \"inline-block\",\r\n                        verticalAlign: \"super\",\r\n                      }}\r\n                    >\r\n                      {/* 1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                                {CONFIG.NETWORK.SYMBOL}. */}\r\n                      <StyledImg\r\n                        alt={\"Ethlogo\"}\r\n                        src={\"/config/images/EthereumLogo.svg\"}\r\n                        className=\"ethlogoimage\"\r\n                      />\r\n                      {CONFIG.DISPLAY_COST3}{\" \"}\r\n                      <font style={{ fontSize: 23 }}>ETH</font>\r\n                    </s.TextTitle>\r\n                    {/* <s.SpacerXSmall /> */}\r\n                    <s.TextDescription\r\n                      style={{ textAlign: \"center\", display: \"none\" }}\r\n                    >\r\n                      Excluding gas fees.\r\n                    </s.TextDescription>\r\n                  </s.Container>\r\n                  {/* <s.SpacerSmall /> */}\r\n                  {blockchain.account === \"\" ||\r\n                  blockchain.smartContract === null ? (\r\n                    <s.Container\r\n                      ai={\"center\"}\r\n                      jc={\"center\"}\r\n                      style={{ display: \"block\", textAlign: \"center\" }}\r\n                    >\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        Connect to the {CONFIG.NETWORK.NAME} network\r\n                      </s.TextDescription>\r\n                      <s.SpacerSmall />\r\n                      {/* <StyledButton\r\n                                    className=\"mintbtn\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connect());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    Connect\r\n                                  </StyledButton> */}\r\n                      <StyledButton\r\n                        className=\"mintbtn walletbtncon\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(connect());\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {/* <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/metamask.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    /> */}\r\n                        Connect\r\n                      </StyledButton>\r\n                      {/* <StyledButton\r\n                                    className=\"mintbtn walletbtncon\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connectcoinbase());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/coinbase.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    />\r\n                                    Coinbase\r\n                                  </StyledButton>\r\n                                  <StyledButton\r\n                                    className=\"mintbtn walletbtncon\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connectwalletcon());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/walletconnect.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    />\r\n                                    WalletConnect\r\n                                  </StyledButton> */}\r\n                      {blockchain.errorMsg !== \"\" ? (\r\n                        <>\r\n                          <s.SpacerSmall />\r\n                          <s.TextDescription\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            {blockchain.errorMsg}\r\n                          </s.TextDescription>\r\n                        </>\r\n                      ) : null}\r\n                    </s.Container>\r\n                  ) : (\r\n                    <>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        {feedback}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                        <StyledRoundButton\r\n                          className=\"mintnumberbtn\"\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            decrementMintAmount3();\r\n                          }}\r\n                        >\r\n                          -\r\n                        </StyledRoundButton>\r\n                        <s.SpacerMedium />\r\n                        <s.SpacerMedium />\r\n                        <s.TextDescription\r\n                          style={{ textAlign: \"center\", fontSize: 45 }}\r\n                        >\r\n                          {mintAmount3}\r\n                        </s.TextDescription>\r\n                        <s.SpacerMedium />\r\n                        <s.SpacerMedium />\r\n                        <StyledRoundButton\r\n                          className=\"mintnumberbtn\"\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            incrementMintAmount3();\r\n                          }}\r\n                        >\r\n                          +\r\n                        </StyledRoundButton>\r\n                      </s.Container>\r\n                      <s.SpacerSmall />\r\n\r\n                      <s.Container\r\n                        ai={\"center\"}\r\n                        jc={\"center\"}\r\n                        fd={\"row\"}\r\n                        style={{ marginTop: 25 }}\r\n                      >\r\n                        <StyledButton\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          className=\"mintbtn\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            claimNFTs3();\r\n                            getData();\r\n                          }}\r\n                        >\r\n                          {claimingNft\r\n                            ? \"BUSY\"\r\n                            : \"MINT for \" + totalCostamount3 + \" ETH\"}\r\n                        </StyledButton>\r\n                      </s.Container>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <s.SpacerMedium />\r\n            </s.Container>\r\n          </s.Container>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n              <StyledImg\r\n                alt={\"Mintimg1\"}\r\n                src={\"/config/images/Bronze.gif\"}\r\n                className=\"mintsectionimg\"\r\n              />\r\n              <s.TextDescription style={{ textAlign: \"center\", fontSize: 21 }}>\r\n                Pick 3 Classes\r\n              </s.TextDescription>\r\n              <s.SpacerSmall />\r\n              {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY4 ? (\r\n                <>\r\n                  <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                    The sale has ended.\r\n                  </s.TextTitle>\r\n                  <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                    You can still find {CONFIG.NFT_NAME} on\r\n                  </s.TextDescription>\r\n                  <s.SpacerSmall />\r\n                  <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                    {CONFIG.MARKETPLACE}\r\n                  </StyledLink>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <s.Container\r\n                    flex={1}\r\n                    jc={\"center\"}\r\n                    ai={\"center\"}\r\n                    style={{ textAlign: \"center\", display: \"block\", flex: 0 }}\r\n                  >\r\n                    <s.TextTitle\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        fontSize: 48,\r\n                        display: \"inline-block\",\r\n                        verticalAlign: \"super\",\r\n                      }}\r\n                    >\r\n                      {/* 1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n                                {CONFIG.NETWORK.SYMBOL}. */}\r\n                      <StyledImg\r\n                        alt={\"Ethlogo\"}\r\n                        src={\"/config/images/EthereumLogo.svg\"}\r\n                        className=\"ethlogoimage\"\r\n                      />\r\n                      {CONFIG.DISPLAY_COST4}{\" \"}\r\n                      <font style={{ fontSize: 23 }}>ETH</font>\r\n                    </s.TextTitle>\r\n                    {/* <s.SpacerXSmall /> */}\r\n                    <s.TextDescription\r\n                      style={{ textAlign: \"center\", display: \"none\" }}\r\n                    >\r\n                      Excluding gas fees.\r\n                    </s.TextDescription>\r\n                  </s.Container>\r\n                  {/* <s.SpacerSmall /> */}\r\n                  {blockchain.account === \"\" ||\r\n                  blockchain.smartContract === null ? (\r\n                    <s.Container\r\n                      ai={\"center\"}\r\n                      jc={\"center\"}\r\n                      style={{ display: \"block\", textAlign: \"center\" }}\r\n                    >\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        Connect to the {CONFIG.NETWORK.NAME} network\r\n                      </s.TextDescription>\r\n                      <s.SpacerSmall />\r\n                      {/* <StyledButton\r\n                                    className=\"mintbtn\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connect());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    Connect\r\n                                  </StyledButton> */}\r\n                      <StyledButton\r\n                        className=\"mintbtn walletbtncon\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          dispatch(connect());\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {/* <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/metamask.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    /> */}\r\n                        Connect\r\n                      </StyledButton>\r\n                      {/* <StyledButton\r\n                                    className=\"mintbtn walletbtncon\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connectcoinbase());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/coinbase.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    />\r\n                                    Coinbase\r\n                                  </StyledButton>\r\n                                  <StyledButton\r\n                                    className=\"mintbtn walletbtncon\"\r\n                                    onClick={(e) => {\r\n                                      e.preventDefault();\r\n                                      dispatch(connectwalletcon());\r\n                                      getData();\r\n                                    }}\r\n                                  >\r\n                                    <StyledImg\r\n                                      alt={\"coinbase\"}\r\n                                      className=\"walletconbtn\"\r\n                                      src={\"/config/images/walletconnect.png\"}\r\n                                      style={{ border: \"none\", borderRadius: 0, width: \"100%\" }}\r\n                                    />\r\n                                    WalletConnect\r\n                                  </StyledButton> */}\r\n                      {blockchain.errorMsg !== \"\" ? (\r\n                        <>\r\n                          <s.SpacerSmall />\r\n                          <s.TextDescription\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            {blockchain.errorMsg}\r\n                          </s.TextDescription>\r\n                        </>\r\n                      ) : null}\r\n                    </s.Container>\r\n                  ) : (\r\n                    <>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        {feedback}\r\n                      </s.TextDescription>\r\n                      <s.SpacerMedium />\r\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                        <StyledRoundButton\r\n                          className=\"mintnumberbtn\"\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            decrementMintAmount4();\r\n                          }}\r\n                        >\r\n                          -\r\n                        </StyledRoundButton>\r\n                        <s.SpacerMedium />\r\n                        <s.SpacerMedium />\r\n                        <s.TextDescription\r\n                          style={{ textAlign: \"center\", fontSize: 45 }}\r\n                        >\r\n                          {mintAmount4}\r\n                        </s.TextDescription>\r\n                        <s.SpacerMedium />\r\n                        <s.SpacerMedium />\r\n                        <StyledRoundButton\r\n                          className=\"mintnumberbtn\"\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            incrementMintAmount4();\r\n                          }}\r\n                        >\r\n                          +\r\n                        </StyledRoundButton>\r\n                      </s.Container>\r\n                      <s.SpacerSmall />\r\n\r\n                      <s.Container\r\n                        ai={\"center\"}\r\n                        jc={\"center\"}\r\n                        fd={\"row\"}\r\n                        style={{ marginTop: 25 }}\r\n                      >\r\n                        <StyledButton\r\n                          disabled={claimingNft ? 1 : 0}\r\n                          className=\"mintbtn\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            claimNFTs4();\r\n                            getData();\r\n                          }}\r\n                        >\r\n                          {claimingNft\r\n                            ? \"BUSY\"\r\n                            : \"MINT for \" + totalCostamount4 + \" ETH\"}\r\n                        </StyledButton>\r\n                      </s.Container>\r\n                    </>\r\n                  )}\r\n                </>\r\n              )}\r\n              <s.SpacerMedium />\r\n            </s.Container>\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n      </s.Container>\r\n\r\n      <s.Container\r\n        flex={1}\r\n        ai={\"center\"}\r\n        style={{ backgroundColor: \"var(--primary)\" }}\r\n      >\r\n        <s.Container jc={\"center\"} ai={\"center\"} className=\"footersection\">\r\n          <ResponsiveWrapper\r\n            flex={1}\r\n            style={{ padding: \"0px 5%\", maxWidth: 1450 }}\r\n            test\r\n          >\r\n            <s.Container\r\n              flex={1}\r\n              jc={\"center\"}\r\n              ai={\"center\"}\r\n              style={{ display: \"initial\" }}\r\n            >\r\n              <s.TextDescription\r\n                style={{ textAlign: \"left\", color: \"#ffffff\", fontSize: 20 }}\r\n              >\r\n                Copyright © 2022\r\n              </s.TextDescription>\r\n            </s.Container>\r\n            <s.Container\r\n              flex={1}\r\n              jc={\"center\"}\r\n              ai={\"center\"}\r\n              style={{ display: \"initial\" }}\r\n            >\r\n              <ResponsiveWrapper flex={1} test>\r\n                <s.Container\r\n                  flex={1}\r\n                  jc={\"center\"}\r\n                  ai={\"center\"}\r\n                  style={{ display: \"initial\" }}\r\n                >\r\n                  <a\r\n                    href=\"#\"\r\n                    style={{ float: \"right\", marginRight: 20 }}\r\n                    target=\"_black\"\r\n                  >\r\n                    <StyledImg\r\n                      alt={\"opensea\"}\r\n                      src={\"/config/images/opensea.png\"}\r\n                      style={{ border: \"none\", borderRadius: 0, maxWidth: 42 }}\r\n                    />\r\n                  </a>\r\n                  <a\r\n                    href=\"#\"\r\n                    style={{ float: \"right\", marginRight: 20 }}\r\n                    target=\"_black\"\r\n                  >\r\n                    <StyledImg\r\n                      alt={\"discord\"}\r\n                      src={\"/config/images/discord.png\"}\r\n                      style={{ border: \"none\", borderRadius: 0, maxWidth: 38 }}\r\n                    />\r\n                  </a>\r\n                  <a\r\n                    href=\"#\"\r\n                    style={{ float: \"right\", marginRight: 20 }}\r\n                    target=\"_black\"\r\n                  >\r\n                    <StyledImg\r\n                      alt={\"Instagram\"}\r\n                      src={\"/config/images/Instagram.png\"}\r\n                      style={{ border: \"none\", borderRadius: 0, maxWidth: 38 }}\r\n                    />\r\n                  </a>\r\n                  <a\r\n                    href=\"#\"\r\n                    style={{ float: \"right\", marginRight: 20 }}\r\n                    target=\"_black\"\r\n                  >\r\n                    <StyledImg\r\n                      alt={\"twitter\"}\r\n                      src={\"/config/images/twitter.png\"}\r\n                      style={{ border: \"none\", borderRadius: 0, maxWidth: 38 }}\r\n                    />\r\n                  </a>\r\n                </s.Container>\r\n              </ResponsiveWrapper>\r\n            </s.Container>\r\n          </ResponsiveWrapper>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}